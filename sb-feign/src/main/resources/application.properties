server.port=9999
#******************openfeign配置，参数采用的是默认的配置，可根据实际情况调整***********************
#启用ApacheHttpClient。默认就是true，使用HttpClientConnectionManager管理连接复用
feign.httpclient.enabled=true
#连接池的最大连接数，默认200
feign.httpclient.max-connections=200
#每个路由(服务器)分配的组最大连接数，默认50
feign.httpclient.max-connections-per-route=50
#连接最大存活时间，默认900秒
feign.httpclient.time-to-live=900
#连接最大存活时间单位秒
feign.httpclient.time-to-live-unit=seconds
#FeignAcceptGzipEncodingInterceptor拦截器被激活，会在header中添加Accept-Encoding：gzip,deflate,表明服务端在返回值时可以使用如下两个方式压缩返回结果
feign.compression.response.enabled=true
#FeignContentGzipEncodingInterceptor拦截器被激活，会在header中添加Content-Encoding：gzip,deflate,表明body中的参数是使用这两个方式的压缩
feign.compression.request.enabled=true
#content-length大于2048就进行请求参数的gzip压缩
feign.compression.request.minRequestSize=2048


#开启断路器
feign.hystrix.enabled=true
#断路器的隔离策略，默认就是线程池，SEMAPHORE模式下，就是主线程调用的远程的服务，即同步的
hystrix.command.default.execution.isolation.strategy=THREAD
#断路器超时设置
hystrix.command.default.execution.timeout.enabled=true
#总体请求在45秒还是无法得到响应，建议触发熔断（ribbon每个请求读取15秒超时，两个实例重试就是30秒，openfeign外层默认会进行一次调用，4次重试）
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=45000
#断路器的线程池存在一个问题，在队列满了以后，不会再去创建新的线程直到maximumSize
#核心线程池大小
hystrix.threadpool.default.coreSize=10
#最大线程池大小
hystrix.threadpool.default.maximumSize=10
#超过这个空闲时间,多于coreSize数量的线程会被回收，1分钟
hystrix.threadpool.default.keepAliveTimeMinutes=1
#队列的大小，默认为-1，即没有队列
hystrix.threadpool.default.maxQueueSize=200
#队列任务达到此阈值后，就开始拒绝；实际使用此参数进行队列是否满的判断
hystrix.threadpool.default.queueSizeRejectionThreshold=180



#负载均衡配置
#读取超时15秒，与原RestTemplate保持一致
ribbon.ReadTimeout=15000
#连接超时15秒，与原RestTemplate保持一致
ribbon.ConnectTimeout=15000
##每台服务器最多重试次数，但是首次调用不包括在内
ribbon.MaxAutoRetries=0
##最多重试多少台服务器，与实际实例数保持一致（不包括首台）
ribbon.MaxAutoRetriesNextServer=1
#是否所有操作都重试,
# false：get请求中，连接超时，读取超时都会重试，其他请求(put,post)连接超时重试，读取超时不重试。
# true：get请求中，连接超时，读取超时都会重试，其他请求(put,post)连接超时重试，读取超时重试。
#对于请求(put,post)要做好接口的幂等性
ribbon.OkToRetryOnAllOperations=true